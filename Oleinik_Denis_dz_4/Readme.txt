К первой задаче было создано три варианта решения:
1 - цикл
2 - рекурсия + список
3 - создание списка

Судя по результатам timeit самый оптимальный вариант кода через "цикл". На втором месте - "рекурсия + список".
Соответственно, на третьем месте - "создание списка".

Результаты cProfile:
- через "цикл" - в качестве аргумента было передано 10_000_000 значений, для выполнения было вызвано 4 функции за 0.696 секунды (если сделать 991 значений, как в варианте через рекурсию, получится 4 функции за 0.000)
- через "рекурсия + список" - в качестве аргумента было передано максимальное значение - 991, было вызвано 1987 функций за 0.001 секунды
- через "создание списка" - в качестве аргумента было передано 10_000 значений, было вызвано 100005 функции за 9.233 секунды (если сделать 991 значений, как в варианте через рекурсию, получится 1987 функции за 0.001)
Согласно результатов cProfile очевидно, что на первом месте также вариант решения задачи через цикл - количество значений неограничено, задействуется минимальное количество функций.
В остальных случаях одинаковое количество вызовов, но в варианте "рекурсия + список" есть ограничение по количеству значений.

Вывод: варианта решения задачи через "цикл" выглядит самым оптимальным